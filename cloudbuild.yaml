steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/how-scary-wiki:$COMMIT_SHA', '.']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/how-scary-wiki:$COMMIT_SHA']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'how-scary-wiki'
      - '--image'
      - 'gcr.io/$PROJECT_ID/how-scary-wiki:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '100'
      - '--set-env-vars'
      - 'NODE_ENV=production'
      - '--set-secrets'
      - 'DATABASE_URL=DATABASE_URL:latest,NEXT_PUBLIC_FIREBASE_API_KEY=FIREBASE_API_KEY:latest,NEXT_PUBLIC_FIREBASE_PROJECT_ID=FIREBASE_PROJECT_ID:latest,GOOGLE_KNOWLEDGE_GRAPH_API_KEY=GOOGLE_KG_API_KEY:latest'

images:
  - 'gcr.io/$PROJECT_ID/how-scary-wiki:$COMMIT_SHA'

# Grant Cloud Run service access to Cloud SQL
options:
  logging: CLOUD_LOGGING_ONLY
  
# Ensure the Cloud Run service account has access to secrets
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_URL/versions/latest
      env: DATABASE_URL
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_API_KEY/versions/latest
      env: FIREBASE_API_KEY
    - versionName: projects/$PROJECT_ID/secrets/FIREBASE_PROJECT_ID/versions/latest
      env: FIREBASE_PROJECT_ID
    - versionName: projects/$PROJECT_ID/secrets/GOOGLE_KG_API_KEY/versions/latest
      env: GOOGLE_KG_API_KEY